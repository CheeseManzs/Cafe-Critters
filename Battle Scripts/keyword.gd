class_name Keyword
extends Node

static var keywords = [
	"Riptide",
	"Empower",
	"Haste",
	"Slow",
	"Suspend",
	"Dredge",
	"Flotsam",
	"Salvage",
	"Pitch",
	"Knowledge",
	"Barrier",
	"Regen",
	"Strongarm",
	"Reckless",
	"Dice",
	"Tag",
	"Toss",
	"Poison",
	"Machine",
	"Overheated",
	"Priority",
	"Scrap",
	"Burn",
	"Execute",
	"Veil",
	"Block",
	"Attack Up",
	"Defense Up",
	"Attack Down",
	"Defense Down",
	"Gold",
	"Omen"
]

static var keywordDescriptions = {
	"Riptide": "Whenever ANY card enters the graveyard, lose X HP.",
	"Empower": "Empowered card gain a 1.5x multiplier on relevant number.",
	"Haste": "Your cards cost 1 less to play. Whenever you play a card decrease X by 1.",
	"Slow": "Your cards cost 1 less to play. Whenever you play a card decrease X by 1.",
	"Suspend": "Banish X cards from your deck. When the effect ends, those cards are sent to the graveyard.",
	"Dredge": "Reveal Y cards from your graveyard. Add X of them to hand, exile the rest.",
	"Flotsam": "Unique token. 0 cost, draw 1.",
	"Salvage": "Salvaged cards have different effects when drawn from your graveyard.",
	"Pitch": "Pitched effects are stored, then occur all at once after you switch.",
	"Knowledge": "Draw 1 additional card on round start for every 3 knowledge counters.",
	"Barrier": "The next instance of damage is reduced by X. Then, reduce X by the amount of damage reduced.",
	"Regen": "Start of turn: heal HP equal to regen, then decrease X by 1.",
	"Strongarm": "Opponent exiles a card at random. Whenever the opponent plays a card, return a Strongarm'd card to them at random. At the end of the turn, move all Strongarm'd cards to the bottom of the opponent's deck.",
	"Reckless": "As an additional cost to play this card, discard a card at random. If the card meets the X condition, become Reckless and gain this card's reckless benefits.",
	"Dice": "Rolls a random number",
	"Tag": "Become Tagged if this is the first action performed after swap-in.",
	"Toss": "Tosses",
	"Poison": "Whenever a card is played, take X damage, then decrease X by 1.",
	"Machine": "This Fae begins the game with a heat bar that stores up to 5 units of heat. At the end of the Fae's turn, discard all unplayed cards and add 1 heat per card discarded. Attack or Defense cards played will have their modifiers increased by +5% per heat stored and consume 1 unit of heat. If the Fae has 5 units of heat, this bonus is +50% instead. If the Fae has more than 5 units of heat, they become Overheated.",
	"Overheated": "While Overheated, the Fae gets +25% to all Attack and Defense modifiers, no longer benefits from Machine and can no longer play utility cards. Their heat bar resets to 0 at end of turn.",
	"Priority": "Any card played will gain +1 level of priority, then reduce X by 1.",
	"Scrap": "Unique Token. This card does nothing.",
	"Burn": "On round end, take X damage, then decrease X by 1. Burnt shelved faes still take damage.",
	"Execute": "Instantly bring a Fae to 0 HP.",
	"Veil": "The next instance of damage is reduced by X. Then remove all Veil stacks.",
	"Block": "Icon to represent amount of damage to mitigate. Created by Defend. Lose all Block at the end of the round.",
	"Attack Up": "Faes get +5% damage on Attack cards per stack of Attack Up",
	"Defense Up": "Faes get +5% damage on Defense cards per stack of Defense Up",
	"Attack Down": "Faes get -5% damage on Attack cards per stack of Attack Down",
	"Defense Down": "Faes get -5% damage on Attack cards per stack of Frailty",
	"Gold": "0 Cost: Draw a card. Gain 1 mp.",
	"Omen": "Whenever an Omen card is played and this card is in the graveyard, trigger it's effects. If this card was triggered, is in the graveyard and was not played, shuffle it back into it's respective Fae's deck."
}

static func getDescription(keywordString) -> String:
	return keywordDescriptions[keywordString]
